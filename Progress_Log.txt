   _____            _              _____           _           _   
  / ____|          (_)            |  __ \         (_)         | |  
 | (___   ___ _ __  _  ___  _ __  | |__) _ __ ___  _  ___  ___| |_ 
  \___ \ / _ | '_ \| |/ _ \| '__| |  ___| '__/ _ \| |/ _ \/ __| __|
  ____) |  __| | | | | (_) | |    | |   | | | (_) | |  __| (__| |_ 
 |_____/ \___|_| |_|_|\___/|_|    |_|   |_|  \___/| |\___|\___|\__|
                                                 _/ |              
                                                |__/               
SFML (Simple and Fast Multimedia Library)
Version 2.5.1 Visual C++ 15 (2017) - 32-bit

I will be using this API that is built upon OpenGL in order to communicate 
with the graphics card so that we can draw graphics onto the screen.



7/15/2019
Progress
 - External SFML library has been installed successfully.
 - Created main.cpp and started working on the Game class.





7/16/2019
Progress
 - Updated the Game class.
	- Game class now has a deltatime clock to track how long it takes to update
		and render frames.
	- Created a window.ini file to the \Config directory so that we can create a 
		new game window using config parameters.
	- Updated InitWindow() so that it now parses from the window.ini config file
		in a rudimentary way.
 - Created the State class to control the game's current state.
 - Created the GameState class to control the game's overall states.
	- Added an EndState so the application can terminate gracefully.
	- User can exit the game by pressing the ESC key.
 - Created the Entity class to add characters into the game.
	- Entities can now be drawn onto the window.
	- User can control the entity with WASD as movement keys

Bugs/Issues
 - Player's entity can move off screen because there are no "walls" and the 
	camera currently does not follow the entity.





7/30/2019
Progress
 - Updated keybindings so that there is a list of supported keys available and
	keybindings can easily be changed using those supported keys. They are also
	being read from a .ini file in the /Config/ folder.
 - Created a main menu (state) for the user to interact with upon start up.
	- Added a fonts feature so that custom fonts can be used within the main
		menu.
	- States now record cursor position should they require it. For example the
		main menu might have buttons that the user will click on.
	- Main menu now has a solid color background, wooooo!
 - Created a button class to easily create the main menu gui and where-ever
	we might need more buttons like a pause menu.
	- Buttons are now working!

Bugs/Issues
 - Every keystroke is being recorded based on frames per second so if the user
	presses ESC to quit and holds it longer than 1 frame, the game might
	terminate not only that game state but also all of the other active states
	on the stack.
	- Fixed on 8/1/2019 by removing quit functionality on main menu screen.





8/1/2019
Progress
 - Added more main menu functionality.
	- The New Game button can now push a new state onto the stack to start the
		game.
	- Added background image for main menu and moved button locations.
	- Added settings button to change setting easier, not yet implemented.
 - General engine fixes
	- Fixed an issue where pressing the ESC key during the game state would 
		terminate the game state and main menu state, thus closing the entire
		program.
	- Cleaned up some junk code regarding how states were requesting to be 
		closed.
	 - Added more window configurations, user can now switch between fullscreen 
		and bordered via the config file.
 - Updated the entity class to be more generic and allow for sprites and
	textures.
	- Created a Player class to utilize the Entity class.





8/2/2019
Progress
 - Updated player class.
	- Can now load sprite images from local resources.
 - Created a movement component that will control how entities move within the
	game.
	- Updated the entity and player classes to utilize this component.
 - Cleaned up some code regarding textures and sprites, removing the texture
	pointer that was not actually needed and instead replaced with a reference.





8/5/2019
Progress
 - Updated entity movement.
	- Sprites will now accelerate and decelerate with basic physics. 
 - Updated main menu.
	- Added and changed main menu font.
	- Added more customizability to buttons.
		- Buttons now have changing text colors when idle, clicked, or hovered.
 - Created an animation class to start animating sprites.
 - Everything I wrote for the animation class broke the whole thing so now I
	have to rewrite the whole animation class..





8/7/2019
Progress
 - Could not figure out how to animate sprites so I the animation class is now
	deprecated. This way we at least have a pleasing sprite to look at.
 - Started implementing an editor mode to create a map and entities.
	- Editor button on main menu now has functionality to push editor state.
 - Created a hitbox module so that we can check for collisions between objects
	within the game.
	- Hitbox render is working properly.
 - Updated player sprite so that it changes left and right accordingly with
	movement.
 - Created a pause menu for when the user tries to escape during the game.

 Bugs/Issues
 - When calling the pause menu, it is called for every frame while holding
	down Esc. This causes the pause menu to constantly flicker when pressed.





8/8/2019
Progress
 - Updated Pause Menu.
	- Added and implemented a quit game button.
	- Fixed the issue with the pause menu opening and closing too quickly by
		implementing a timer system.
 - Started implementing the settings menu.
	- Added button to return to main menu from settings menu.
	- Added dropdownlist to select resolution.
		- Implemented a way to select and change resolution but is very buggy.
 - Converted the Button class into a gui namespace instead.
	- Created a DropDownList class within the gui:: namespace.
	- Button class now allows for outlines when interacting.

 Bugs/Issues
 - Unable to center text on buttons in pause menu for some reason.
 - Overlapping buttons between main menu and settings causing you to click
	buttons on the main menu when returning. Need to add a timer.
 - Changing resolution in settings is super buggy and cuts things off screen. 





8/9/2019
Progress
 - Started working on tiles and the world map.
	- Created Tile class.
	- Created WorldMap class.
		- Working WorldMap that is just a bunch of green colored squares
			(for now).
 - Using precompiled headers because things are getting messy with includes.
	- Original compile speed with clean solution: 14416 ms
	- Improved compile speed with clean solution:  3011 ms
 - Changed how loading settings works.
	- 'window.ini' is changed to 'gfx.ini' for all graphical related settings.
	- Can now load and save to 'gfx.ini' properly from the settings menu!
 - Updated Editor game mode.
	- Added a pause menu to properly return to the main menu.
	- Added a selection rectangle for future adding and removing of tiles on 
		the world map.
		- Selection rectangle snaps to the grid you are on for easy tile
			selection.
	- User can now add tiles to the world map _INCORRECTLY_! :L
	- World Map now allows for nullptr tiles where nothing is rendered.
 - Created a StateDataContainer class within the State class to help with
	transfering data around in a more readable fashion. Having multiple lines
	of parameters made things ugly and confusion.
	- This improves readability for all state related implementation.

Bugs/Issues
 - When adding a tile to the world map in the editor mode, the tile takes up a
	seemingly random amount of tiles for some reason?





8/?/2019
Progress
 - 